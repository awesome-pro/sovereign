export const AUTH_TOKEN_KEY = 'accessToken';
export const REFRESH_TOKEN_KEY = 'refreshToken';

export const AUTH_CONFIG = {
  publicPaths: [
    '/auth/sign-in',
    '/auth/sign-up',
    '/auth/forgot-password',
    '/auth/reset-password',
    '/auth/verify-email',
  ],
  defaultRedirectPath: '/dashboard',
  logoutRedirectPath: '/auth/sign-in',
  unauthorizedPath: '/unauthorized',
  cookieOptions: {
    secure: process.env.NODE_ENV === 'production',
    sameSite: 'strict' as const,
    path: '/',
    httpOnly: true,
    partitioned: true,
    priority: 'high',
  },
  refreshTokenOptions: {
    maxAge: 7 * 24 * 60 * 60, // 7 days
  },
} as const;

export const ROLES = {
  SUPER_ADMIN: 'SUPER_ADMIN',
  ADMIN: 'ADMIN',
  COMPANY_ADMIN: 'COMPANY_ADMIN',
  AGENT: 'AGENT',
  BROKER: 'BROKER',
  PROPERTY_MANAGER: 'PROPERTY_MANAGER',
  VIEWER: 'VIEWER',
} as const;

export const PERMISSIONS = {
  // Property Management
  VIEW_PROPERTIES: 'VIEW_PROPERTIES',
  CREATE_PROPERTY: 'CREATE_PROPERTY',
  EDIT_PROPERTY: 'EDIT_PROPERTY',
  DELETE_PROPERTY: 'DELETE_PROPERTY',
  APPROVE_PROPERTY: 'APPROVE_PROPERTY',

  // Lead Management
  VIEW_LEADS: 'VIEW_LEADS',
  CREATE_LEAD: 'CREATE_LEAD',
  EDIT_LEAD: 'EDIT_LEAD',
  ASSIGN_LEAD: 'ASSIGN_LEAD',
  DELETE_LEAD: 'DELETE_LEAD',

  // Document Management
  VIEW_DOCUMENTS: 'VIEW_DOCUMENTS',
  CREATE_DOCUMENT: 'CREATE_DOCUMENT',
  EDIT_DOCUMENT: 'EDIT_DOCUMENT',
  DELETE_DOCUMENT: 'DELETE_DOCUMENT',
  APPROVE_DOCUMENT: 'APPROVE_DOCUMENT',

  // Team Management
  VIEW_TEAM: 'VIEW_TEAM',
  MANAGE_TEAM: 'MANAGE_TEAM',
  ASSIGN_ROLES: 'ASSIGN_ROLES',

  // Company Management
  VIEW_COMPANY: 'VIEW_COMPANY',
  MANAGE_COMPANY: 'MANAGE_COMPANY',
  
  // Analytics & Reports
  VIEW_ANALYTICS: 'VIEW_ANALYTICS',
  GENERATE_REPORTS: 'GENERATE_REPORTS',
  
  // Settings
  MANAGE_SETTINGS: 'MANAGE_SETTINGS',

  // User Management
  MANAGE_USERS: 'MANAGE_USERS',
  VIEW_USERS: 'VIEW_USERS',

  // Role Management
  MANAGE_ROLES: 'MANAGE_ROLES',
  VIEW_ROLES: 'VIEW_ROLES',

  // Permission Management
  MANAGE_PERMISSIONS: 'MANAGE_PERMISSIONS',
  VIEW_PERMISSIONS: 'VIEW_PERMISSIONS',
} as const;

export const ROLE_PERMISSIONS: Record<string, string[]> = {
  SUPER_ADMIN: Object.values(PERMISSIONS),
  ADMIN: [
    PERMISSIONS.VIEW_PROPERTIES,
    PERMISSIONS.CREATE_PROPERTY,
    PERMISSIONS.EDIT_PROPERTY,
    PERMISSIONS.DELETE_PROPERTY,
    PERMISSIONS.APPROVE_PROPERTY,
    PERMISSIONS.VIEW_LEADS,
    PERMISSIONS.CREATE_LEAD,
    PERMISSIONS.EDIT_LEAD,
    PERMISSIONS.ASSIGN_LEAD,
    PERMISSIONS.DELETE_LEAD,
    PERMISSIONS.VIEW_DOCUMENTS,
    PERMISSIONS.CREATE_DOCUMENT,
    PERMISSIONS.EDIT_DOCUMENT,
    PERMISSIONS.DELETE_DOCUMENT,
    PERMISSIONS.APPROVE_DOCUMENT,
    PERMISSIONS.VIEW_TEAM,
    PERMISSIONS.MANAGE_TEAM,
    PERMISSIONS.VIEW_ANALYTICS,
    PERMISSIONS.GENERATE_REPORTS,
    PERMISSIONS.MANAGE_SETTINGS,
    PERMISSIONS.MANAGE_USERS,
    PERMISSIONS.VIEW_USERS,
    PERMISSIONS.VIEW_ROLES,
  ],
  COMPANY_ADMIN: [
    PERMISSIONS.VIEW_PROPERTIES,
    PERMISSIONS.CREATE_PROPERTY,
    PERMISSIONS.EDIT_PROPERTY,
    PERMISSIONS.VIEW_LEADS,
    PERMISSIONS.CREATE_LEAD,
    PERMISSIONS.EDIT_LEAD,
    PERMISSIONS.ASSIGN_LEAD,
    PERMISSIONS.VIEW_DOCUMENTS,
    PERMISSIONS.CREATE_DOCUMENT,
    PERMISSIONS.EDIT_DOCUMENT,
    PERMISSIONS.VIEW_TEAM,
    PERMISSIONS.MANAGE_TEAM,
    PERMISSIONS.VIEW_ANALYTICS,
    PERMISSIONS.GENERATE_REPORTS,
    PERMISSIONS.MANAGE_SETTINGS,
    PERMISSIONS.VIEW_USERS,
  ],
  AGENT: [
    PERMISSIONS.VIEW_PROPERTIES,
    PERMISSIONS.CREATE_PROPERTY,
    PERMISSIONS.EDIT_PROPERTY,
    PERMISSIONS.VIEW_LEADS,
    PERMISSIONS.CREATE_LEAD,
    PERMISSIONS.EDIT_LEAD,
    PERMISSIONS.VIEW_DOCUMENTS,
    PERMISSIONS.CREATE_DOCUMENT,
    PERMISSIONS.VIEW_ANALYTICS,
  ],
  BROKER: [
    PERMISSIONS.VIEW_PROPERTIES,
    PERMISSIONS.CREATE_PROPERTY,
    PERMISSIONS.EDIT_PROPERTY,
    PERMISSIONS.VIEW_LEADS,
    PERMISSIONS.CREATE_LEAD,
    PERMISSIONS.EDIT_LEAD,
    PERMISSIONS.ASSIGN_LEAD,
    PERMISSIONS.VIEW_DOCUMENTS,
    PERMISSIONS.CREATE_DOCUMENT,
    PERMISSIONS.VIEW_ANALYTICS,
  ],
  PROPERTY_MANAGER: [
    PERMISSIONS.VIEW_PROPERTIES,
    PERMISSIONS.EDIT_PROPERTY,
    PERMISSIONS.VIEW_LEADS,
    PERMISSIONS.VIEW_DOCUMENTS,
    PERMISSIONS.CREATE_DOCUMENT,
    PERMISSIONS.VIEW_ANALYTICS,
  ],
  VIEWER: [
    PERMISSIONS.VIEW_PROPERTIES,
    PERMISSIONS.VIEW_LEADS,
    PERMISSIONS.VIEW_DOCUMENTS,
    PERMISSIONS.VIEW_ANALYTICS,
  ],
} as const;

// Type-safe role and permission types
export type Role = keyof typeof ROLES;
export type Permission = keyof typeof PERMISSIONS;

// Helper function to check if a role has a permission
export function roleHasPermission(role: Role, permission: Permission): boolean {
  return ROLE_PERMISSIONS[role]?.includes(PERMISSIONS[permission]) ?? false;
}

// Helper function to get all permissions for a role
export function getRolePermissions(role: Role): Permission[] {
  return ROLE_PERMISSIONS[role]?.map(p => 
    Object.entries(PERMISSIONS).find(([_, v]) => v === p)?.[0] as Permission
  ) ?? [];
}
