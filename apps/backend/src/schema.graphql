# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthResponse {
  accessToken: String!
  refreshToken: String!
  user: User!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoginHistory {
  createdAt: DateTime!
  device: String
  id: ID!
  ip: String
  location: String
  reason: String
  success: Boolean!
  userId: String!
}

input LoginHistoryInput {
  limit: Int! = 10
}

input LoginInput {
  email: String!
  password: String!
  twoFactorToken: String
}

type Mutation {
  login(input: LoginInput!): AuthResponse!
  logout(refreshToken: String!): Boolean!
  refreshToken(input: RefreshTokenInput!): AuthResponse!
  requestPasswordReset(email: String!): VerificationResponse!
  resetPassword(input: ResetPasswordInput!): VerificationResponse!
  setupTwoFactor: TwoFactorResponse!
  verifyAndEnableTwoFactor(input: TwoFactorTokenInput!): Boolean!
  verifyEmail(token: String!): VerificationResponse!
}

type Query {
  getLoginHistory(input: LoginHistoryInput!): [LoginHistory!]!
  getSecurityLogs(input: SecurityLogsInput!): [SecurityLog!]!
  me: User!
}

input RefreshTokenInput {
  refreshToken: String!
}

input ResetPasswordInput {
  password: String!
  token: String!
}

type Role {
  description: String
  id: ID!
  name: String!
  users: [UserRole!]!
}

type SecurityLog {
  action: String!
  createdAt: DateTime!
  description: String
  device: String
  id: ID!
  ip: String
  userAgent: String
  userId: String!
}

input SecurityLogsInput {
  endDate: DateTime!
  startDate: DateTime!
  userId: String!
}

type TwoFactorResponse {
  qrCodeUrl: String!
  secret: String!
}

input TwoFactorTokenInput {
  token: String!
}

type User {
  email: String!
  emailVerified: DateTime
  id: ID!
  phone: String
  phoneVerified: DateTime
  roles: [UserRole!]!
  status: UserStatus!
  twoFactorEnabled: Boolean!
}

type UserRole {
  assignedAt: DateTime!
  id: ID!
  role: Role!
}

"""User account status"""
enum UserStatus {
  ACTIVE
  ARCHIVED
  DELETED
  INACTIVE
  PENDING_VERIFICATION
  SUSPENDED
}

type VerificationResponse {
  message: String!
  success: Boolean!
}